{"version":3,"sources":["components/input.js","components/Button.js","components/ButtonList.js","components/Calculator.js","logic/operate.js","components/MainContent.js","components/Header.js","components/Quote.js","components/App.js","logic/calculate.js","index.js"],"names":["Input","props","display","type","className","value","onChange","e","target","Button","handleClick","onClick","ButtonList","buttons","content","createButtons","React","useMemo","map","btn","Calculator","click","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","div","mod","Error","MainContent","Header","to","Quote","App","useState","total","next","state","setState","exact","path","btnName","newState","obj","buttonName","match","result","includes","parseFloat","calculate","prevState","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.22849f04.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = (props) => {\n  const { display } = props;\n\n  function handleChange(e) {\n    e.target.value = display;\n  }\n\n  return (\n    <input type=\"text\" className=\"calc-inp\" value={display} onChange={handleChange} />\n  );\n};\n\nInput.propTypes = {\n  display: PropTypes.string.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = (props) => {\n  const { value, className, handleClick } = props;\n\n  function clickHandler() {\n    handleClick(value);\n  }\n\n  return (\n    <input\n      type=\"button\"\n      value={value}\n      className={className}\n      onClick={clickHandler}\n    />\n  );\n};\n\nButton.propTypes = {\n  value: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from './Button';\n\nconst ButtonList = (props) => {\n  const buttons = [\n    { content: 'AC', className: 'btn' },\n    { content: '+/-', className: 'btn' },\n    { content: '%', className: 'btn' },\n    { content: 'รท', className: 'btn btn-orange' },\n    { content: '7', className: 'btn' },\n    { content: '8', className: 'btn' },\n    { content: '9', className: 'btn' },\n    { content: 'x', className: 'btn btn-orange' },\n    { content: '4', className: 'btn' },\n    { content: '5', className: 'btn' },\n    { content: '6', className: 'btn' },\n    { content: '-', className: 'btn btn-orange' },\n    { content: '1', className: 'btn' },\n    { content: '2', className: 'btn' },\n    { content: '3', className: 'btn' },\n    { content: '+', className: 'btn btn-orange' },\n    { content: '0', className: 'btn' },\n    { content: '.', className: 'btn' },\n    { content: '=', className: 'btn btn-orange' },\n  ];\n\n  const createButtons = React.useMemo(() => {\n    const { handleClick } = props;\n    const btns = buttons.map((btn) => (\n      <li key={btn.content}>\n        <Button\n          value={btn.content}\n          className={btn.className}\n          handleClick={handleClick}\n        />\n      </li>\n    ));\n    return btns;\n  });\n\n  return (\n    <ul className=\"btn-list flex\">\n      {createButtons}\n    </ul>\n  );\n};\n\nButtonList.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from './input';\nimport ButtonList from './ButtonList';\nimport './Calculator.css';\n\nconst Calculator = (props) => {\n  const { display, click } = props;\n\n  return (\n    <div className=\"calcWrap flex\">\n      <div>\n        <h1 className=\"calcHeader\">\n          Lets do Some Math:\n        </h1>\n\n      </div>\n\n      <div className=\"calc-div\">\n        <Input display={display} />\n        <ButtonList handleClick={click} />\n      </div>\n    </div>\n  );\n};\n\nCalculator.propTypes = {\n  display: PropTypes.string.isRequired,\n  click: PropTypes.func.isRequired,\n};\n\nexport default Calculator;\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || '0');\n  const two = Big(numberTwo || (operation === 'รท' || operation === 'x' ? '1' : '0'));\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n  if (operation === 'รท') {\n    if (two.toString() === '0') return 'Divison by zero';\n    return one.div(two).toString();\n  }\n  if (operation === '%') {\n    return one.mod(two).toString();\n  }\n  throw Error(`Unknown operation '${operation}'`);\n}\n","import React from 'react';\nimport './MainContent.css';\n\nconst MainContent = () => (\n  <div className=\"main-content\">\n    <h2>\n      Welcome to my calculator\n    </h2>\n    <p>\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n      nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n      pariatur. Excepteur sint occaecat cupidatat non proident,\n      sunt in culpa qui officia deserunt mollit anim id est laborum\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n      nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n      pariatur. Excepteur sint occaecat cupidatat non proident,\n      sunt in culpa qui officia deserunt mollit anim id est laborum\n      sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n      nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n      pariatur. Excepteur sint occaecat cupidatat non proident,\n      sunt in culpa qui officia deserunt mollit anim id est laborum\n    </p>\n    <p>\n      Pharetra et ultrices neque ornare aenean euismod elementum nisi.\n      Sed adipiscing diam donec adipiscing tristique.\n      Nunc sed velit dignissim sodales ut eu. Pretium lectus quam id leo in.\n      Enim praesent elementum facilisis leo vel fringilla est ullamcorper eget.\n      Aliquam vestibulum morbi blandit cursus.\n      Pharetra et ultrices neque ornare aenean euismod elementum nisi.\n      Sed adipiscing diam donec adipiscing tristique.\n      Nunc sed velit dignissim sodales ut eu. Pretium lectus quam id leo in.\n      Enim praesent elementum facilisis leo vel fringilla est ullamcorper eget.\n      Aliquam vestibulum morbi blandit cursus.\n      Pharetra et ultrices neque ornare aenean euismod elementum nisi.\n      Sed adipiscing diam donec adipiscing tristique.\n      Nunc sed velit dignissim sodales ut eu. Pretium lectus quam id leo in.\n      Enim praesent elementum facilisis leo vel fringilla est ullamcorper eget.\n      Aliquam vestibulum morbi blandit cursus.\n      Pharetra et ultrices neque ornare aenean euismod elementum nisi.\n      Sed adipiscing diam donec adipiscing tristique.\n      Nunc sed velit dignissim sodales ut eu. Pretium lectus quam id leo in.\n      Enim praesent elementum facilisis leo vel fringilla est ullamcorper eget.\n      Aliquam vestibulum morbi blandit cursus.\n    </p>\n  </div>\n);\n\nexport default MainContent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <header className=\"flex\">\n    <div className=\"Logo\">\n      <h1>One Calc to Compute them ALL</h1>\n    </div>\n    <nav className=\"flex\">\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/Calculator\">Calculator</Link>\n      </li>\n      <li>\n        <Link to=\"/Quote\">Quote</Link>\n      </li>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport './Quote.css';\n\nconst Quote = () => (\n  <div className=\"quote-wrap flex\">\n    <div>\n      <p>\n        There is a fine line between Numerator and Denominator. - Unknown\n      </p>\n    </div>\n    <div>\n      <p>\n        3.141592653589793238462643\n        38327950288419716939937510\n        582097494459230781640628620\n        89986280348253421\n        1706798214808651328230664\n        709384460955058223172535940\n        8128481117450284102\n        7019385211055596446229489\n        5493038196442881097566593344\n        61284756482337867\n        831652712019091456485669234\n        60348610454326648213393607260249\n        1412737245870066063155881\n        74881520920962829254091715364\n        3678925903600113305305488\n        20466521384146951941511\n        6094330572703657595919530\n        92186117381932611793105118\n        54807446237996274956\n        73518857527248912279381830\n        1194912983367336244065664308\n        6021394946395224\n        7371907021798609437027705392\n        171762931767523846748184676\n        6940513200056\n        81271452635608277857713427\n        577896091736371787214684\n        4090122495343014654\n        95853710507922796892589235\n        420199561121290219608640344\n        1815981362977477130996\n        051870721134999999837297804\n        9951059731732816096318595\n        02445945534690\n        8302642522308253344685035\n        26193118817101000313783875\n        28865875332083814206\n        1717766914730359825349042\n        8755468731159562863882353\n        787593751957781857\n        780532171226806613001927\n        8766111959092164201989\n      </p>\n    </div>\n\n  </div>\n);\n\nexport default Quote;\n","import React, { useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Calculator from './Calculator';\nimport calculate from '../logic/calculate';\nimport MainContent from './MainContent';\nimport Header from './Header';\nimport Quote from './Quote';\n\nconst App = () => {\n  const [state, setState] = useState(\n    {\n      total: null,\n      next: null,\n      operation: null,\n    },\n  );\n  const handleClick = (btnName) => {\n    const newState = calculate(state, btnName);\n    setState((prevState) => ({\n      ...prevState,\n      ...newState,\n    }));\n  };\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <MainContent />\n        </Route>\n        <Route path=\"/Calculator\">\n          <Calculator\n            click={handleClick}\n            display={state.next || state.total || '0'}\n          />\n        </Route>\n        <Route>\n          <Quote path=\"/Quote\" />\n        </Route>\n      </Switch>\n\n    </div>\n  );\n};\n\nexport default App;\n","import Big from 'big.js';\nimport operate from './operate';\n\nfunction isNumber(item) {\n  return !!item.match(/[0-9]+/);\n}\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && obj.next === '0') {\n      return {};\n    }\n\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === '0' ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '%') {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big('100'))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: null,\n        total: obj.next\n          .toString(),\n        operation: buttonName,\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === '.') {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes('.')) {\n        return {};\n      }\n      return { next: `${obj.next}.` };\n    }\n    return { next: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    }\n    // '=' with no operation, nothing to do\n    return {};\n  }\n\n  if (buttonName === '+/-') {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}